# 3 "src/lexer.mll"
 
open Parser        (* The type token is defined in parser.mli *)

# 6 "src/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\005\000\001\000\002\000\251\255\252\255\253\255\010\000\
    \255\255\041\000\072\000\003\000\006\000\254\255\004\000\007\000\
    \008\000\052\000\108\000\114\000\128\000\250\255\249\255";
  Lexing.lex_backtrk = 
   "\007\000\007\000\255\255\255\255\255\255\255\255\255\255\007\000\
    \255\255\007\000\007\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\001\000\007\000\007\000\007\000\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\001\000\002\000\003\000\000\000\000\000\000\000\001\000\
    \000\000\009\000\018\000\011\000\014\000\000\000\015\000\015\000\
    \014\000\001\000\019\000\019\000\018\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\008\000\008\000\000\000\000\000\008\000\255\255\255\255\
    \000\000\000\000\255\255\255\255\255\255\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \008\000\000\000\003\000\000\000\021\000\255\255\000\000\255\255\
    \000\000\000\000\255\255\000\000\255\255\012\000\012\000\007\000\
    \000\000\016\000\011\000\011\000\009\000\013\000\011\000\255\255\
    \000\000\000\000\006\000\005\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\255\255\000\000\000\000\
    \000\000\011\000\000\000\011\000\000\000\000\000\000\000\000\000\
    \000\000\014\000\014\000\010\000\255\255\014\000\255\255\000\000\
    \000\000\000\000\000\000\002\000\000\000\255\255\022\000\000\000\
    \255\255\000\000\255\255\011\000\011\000\255\255\000\000\255\255\
    \014\000\000\000\014\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\015\000\015\000\017\000\
    \000\000\015\000\000\000\015\000\015\000\000\000\000\000\015\000\
    \000\000\000\000\014\000\014\000\011\000\000\000\011\000\000\000\
    \000\000\014\000\014\000\000\000\015\000\014\000\015\000\255\255\
    \000\000\255\255\015\000\000\000\015\000\000\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\
    \014\000\000\000\014\000\014\000\000\000\014\000\015\000\015\000\
    \000\000\000\000\000\000\000\000\015\000\015\000\000\000\001\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\014\000\014\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\015\000\
    \000\000\015\000\000\000\000\000\000\000\015\000\000\000\015\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\014\000\000\000\014\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\001\000\001\000\
    \255\255\255\255\001\000\007\000\007\000\255\255\255\255\007\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\003\000\001\000\255\255\001\000\
    \255\255\255\255\007\000\255\255\007\000\011\000\014\000\000\000\
    \255\255\015\000\009\000\009\000\007\000\012\000\009\000\016\000\
    \255\255\255\255\000\000\000\000\255\255\017\000\017\000\001\000\
    \001\000\017\000\255\255\255\255\007\000\007\000\255\255\255\255\
    \255\255\009\000\255\255\009\000\255\255\255\255\255\255\255\255\
    \255\255\010\000\010\000\009\000\017\000\010\000\017\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\002\000\255\255\
    \001\000\255\255\001\000\009\000\009\000\007\000\255\255\007\000\
    \010\000\255\255\010\000\255\255\255\255\255\255\017\000\017\000\
    \255\255\255\255\255\255\255\255\255\255\018\000\018\000\010\000\
    \255\255\018\000\255\255\019\000\019\000\255\255\255\255\019\000\
    \255\255\255\255\010\000\010\000\009\000\255\255\009\000\255\255\
    \255\255\020\000\020\000\255\255\018\000\020\000\018\000\017\000\
    \255\255\017\000\019\000\255\255\019\000\255\255\018\000\255\255\
    \255\255\255\255\255\255\255\255\019\000\255\255\255\255\255\255\
    \020\000\255\255\020\000\010\000\255\255\010\000\018\000\018\000\
    \255\255\255\255\255\255\255\255\019\000\019\000\255\255\020\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\020\000\020\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\018\000\
    \255\255\018\000\255\255\255\255\255\255\019\000\255\255\019\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\020\000\255\255\020\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\002\000\003\000\011\000\014\000\001\000\012\000\015\000\
    \016\000\255\255\007\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\009\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\017\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \010\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\018\000\255\255\255\255\255\255\
    \255\255\255\255\019\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \020\000";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 8 "src/lexer.mll"
                                                             ( token lexbuf )
# 141 "src/lexer.ml"

  | 1 ->
# 9 "src/lexer.mll"
                                                             ( token lexbuf )
# 146 "src/lexer.ml"

  | 2 ->
# 10 "src/lexer.mll"
                                                             ( Colon )
# 151 "src/lexer.ml"

  | 3 ->
# 11 "src/lexer.mll"
                                                             ( Semicolon )
# 156 "src/lexer.ml"

  | 4 ->
# 12 "src/lexer.mll"
                                                             ( EOF )
# 161 "src/lexer.ml"

  | 5 ->
let
# 13 "src/lexer.mll"
                      terminal
# 167 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 13 "src/lexer.mll"
                                                             ( Terminal(terminal) )
# 171 "src/lexer.ml"

  | 6 ->
# 14 "src/lexer.mll"
                                                             ( Name )
# 176 "src/lexer.ml"

  | 7 ->
let
# 15 "src/lexer.mll"
                                                       s
# 182 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 15 "src/lexer.mll"
                                                             ( String(s) )
# 186 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

